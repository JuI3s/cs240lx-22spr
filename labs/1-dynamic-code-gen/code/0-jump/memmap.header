/* 
 * This is an example of a linker script from cs140e that defines various
 * values.
 *
 * You should modify it (or feel free to replace it!) to do the lab.
 * Note: you will have to modify the makefile.
 */
SECTIONS
{
    LINK_ADDR = 0x8000;

    /* our simple a.out header.  will add as needed. */
    .crt0_header LINK_ADDR : {
        /* b instr to branch to _start (header is 64 bytes) */
        LONG(0xea00000e);

		/* put string "hello\0" next to the jump */
		LONG(0x6C6C6568);
		LONG(0x0000006F);

        /* 
         * the third word is the size of the header.  this lets us avoid changing
         * a bunch of code as we add fields.  You should copy the entire header
         * and just jump over it.
         */
       LONG(SIZEOF(.crt0_header));
	  

        /* Where we are linked at */
        LONG(LINK_ADDR);
        /* 
         * total size of the binary file in bytes not including the header.
         * NOTE: bss data is *not* in the .bin: it contains only zeros so we
         * do not need to record them, just its size.
         */
        LONG(SIZEOF(.text) + SIZEOF(.data) + SIZEOF(.rodata) );

        /* can add stuff below and loader should still work */

		/* move  location pointer to end of header (64 byte header) */
		. += 40;
		
    } =0x0

	.text :  { KEEP(*(.text.boot))  *(.text*) }
    .data :   { . = ALIGN(4); *(.data*)   . = ALIGN(4); } 
    .rodata : { . = ALIGN(4); *(.rodata*) . = ALIGN(4); }
	.bss : {
        __bss_start__ = .;
        *(.bss*)
        . = ALIGN(4);
        *(COMMON)
        . = ALIGN(8);
        __bss_end__ = .;
        . = ALIGN(8);
        __heap_start__ = .;
    }
}
